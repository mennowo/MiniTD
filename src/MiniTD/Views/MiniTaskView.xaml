<UserControl x:Class="MiniTD.Views.MiniTaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xc="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:MiniTD.Views"
             xmlns:helpers="clr-namespace:MiniTD.Helpers"
             xmlns:enums="clr-namespace:MiniTD.DataTypes"
             xmlns:viewModels="clr-namespace:MiniTD.ViewModels"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:MiniTaskViewModel}"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MiniTD;component/Resources/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="AntiqueWhite">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.ColumnSpan="2">
            <RadioButton Margin="5" Content="Task" IsChecked="{Binding Path=IsTask}" />
            <RadioButton Margin="5" Content="Project" IsChecked="{Binding Path=IsProject}" />
        </StackPanel>
        <Label Grid.Row="1" Grid.Column="0" Content="Task:" />
        <TextBox Grid.Row="1" Grid.Column="1" Margin="2" Text="{Binding Path=Title,UpdateSourceTrigger=PropertyChanged}" />
        <Label Grid.Row="2" Grid.Column="0" Content="Outcome:" />
        <TextBox Grid.Row="2" Grid.Column="1" Margin="2" Text="{Binding Path=Outcome,UpdateSourceTrigger=PropertyChanged}" />
        <Label Grid.Row="3" Grid.Column="0" Content="Status:" />
        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Vertical">
            <ComboBox Margin="2" 
                      ItemsSource="{Binding Source={helpers:EnumBindingSource {x:Type enums:MiniTaskStatus}}}"
                      SelectedItem="{Binding Path=Status,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
            <DockPanel LastChildFill="True" Visibility="{Binding Path=StatusHasDelegatedTo,Converter={StaticResource Bool2VisConv}}">
                <Label Content="To:" />
                <TextBox Margin="2" Text="{Binding Path=DelegatedTo,UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>
            <DockPanel LastChildFill="True" Visibility="{Binding Path=StatusHasDueDate,Converter={StaticResource Bool2VisConv}}">
                <Label Content="Due date:" />
                <Button Content="+ Week" Margin="2" DockPanel.Dock="Right" Command="{Binding Path=PostponeCommand}" CommandParameter="week" />
                <Button Content="+ Day" Margin="2" DockPanel.Dock="Right" Command="{Binding Path=PostponeCommand}" CommandParameter="day"/>
                <DatePicker SelectedDate="{Binding Path=DateDue,UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>
        </StackPanel>
        <Label Grid.Row="4" Grid.Column="0" Content="Topic:" />
        <ComboBox 
            Grid.Row="4" 
            Grid.Column="1" 
            Margin="2" 
            ItemsSource="{Binding Path=Topics}" 
            SelectedValue="{Binding Path=TopicID,UpdateSourceTrigger=PropertyChanged}"
            SelectedValuePath="ID"
            IsEditable="False">
            <ComboBox.ItemTemplate>
                <DataTemplate DataType="{x:Type viewModels:MiniTopicViewModel}">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Margin="2" Background="{Binding Path=TopicColor,Converter={StaticResource ColorToSolidColorBrush_ValueConverter}}" />
                        <TextBlock Grid.Column="1" Margin="2" Text="{Binding Path=Title}" />
                    </Grid>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <Label Grid.Row="5" Grid.Column="0" Content="Duration:" Visibility="{Binding Path=IsTask,Converter={StaticResource Bool2VisConv}}" />
        <Label Grid.Row="5" Grid.Column="0" Content="Total duration:" Visibility="{Binding Path=IsProject,Converter={StaticResource Bool2VisConv}}" />
        <xc:TimeSpanUpDown Text="{Binding Path=Duration}" Grid.Row="5" Grid.Column="1" HorizontalAlignment="Left" Margin="2" Visibility="{Binding Path=IsTask,Converter={StaticResource Bool2VisConv}}" />
        <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding Path=TotalDuration}" Margin="5" Visibility="{Binding Path=IsProject,Converter={StaticResource Bool2VisConv}}" />
        <local:MiniTaskNoteCollectionView Grid.Row="6" Grid.ColumnSpan="2" Grid.Column="0" Margin="2" />
        <Grid Grid.Row="7" Grid.ColumnSpan="2" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto "/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <CheckBox 
                Grid.Column="0"
                Name="ProcessDoneCb" Margin="5" IsChecked="{Binding Path=Done,Mode=TwoWay}">Done</CheckBox>
            <DatePicker
                Grid.Column="1"
                IsEnabled="{Binding ElementName=ProcessDoneCb,Path=IsChecked}"
                SelectedDate="{Binding Path=DateDone,UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
    </Grid>
</UserControl>
