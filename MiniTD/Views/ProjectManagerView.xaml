<!--
Copyright(c) 2016 Menno van der Woude

Permission is hereby granted, free of charge, to any person obtaining a 
copy of this software and associated documentation files (the "Software"), 
to deal in the Software without restriction, including without limitation 
the rights to use, copy, modify, merge, publish, distribute, sublicense, 
and/or sell copies of the Software, and to permit persons to whom the 
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included 
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
DEALINGS IN THE SOFTWARE.
-->
<UserControl x:Class="MiniTD.Views.ProjectManagerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:interactivity="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:vm="clr-namespace:MiniTD.ViewModels"
             xmlns:vw="clr-namespace:MiniTD.Views"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             d:DataContext="{d:DesignInstance vm:ProjectManagerViewModel}"
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <vm:TreeViewLineConverter x:Key="LineConverter"/>
                    <vm:DoneToTextDecorationsConverter x:Key="doneToTextDecorationsConverter" />
                    <vm:CurrentToItalicConverter x:Key="currentToItalicConv" />
                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/MiniTD;component/Resources/Resources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MiniTD;component/Resources/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="2*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Label FontWeight="Bold" Content="Current tasks" />
            <vw:CurrentTasksView Grid.Row="1" DataContext="{Binding Path=CurrentTasksVM}" ShowNotes="false" />
        </Grid>
        <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Height="5" />
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" MinHeight="50" />
                    <RowDefinition Height="Auto" />
                    <!--<RowDefinition Height="5" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="3*" MinHeight="50" />
                <RowDefinition Height="Auto" />-->
                </Grid.RowDefinitions>
                <Label Content="Projects" FontWeight="Bold" />
                <TreeView 
                    Grid.Row="1"
                    Margin="2"
                    ItemsSource="{Binding Path=AllTasks}"
                    MinHeight="100"
                    dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    MinWidth="120" HorizontalAlignment="Stretch" >
                    <interactivity:Interaction.Behaviors>
                        <vw:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
                    </interactivity:Interaction.Behaviors>
                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add new project" Command="{Binding Path=AddProjectCommand}" />
                        </ContextMenu>
                    </TreeView.ContextMenu>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type vm:MiniTaskViewModel}"  ItemsSource="{Binding AllTasks}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="17" Visibility="{Binding Path=IsProject,Converter={StaticResource Bool2VisConv}}"
                                   Source="{StaticResource ProjectIconDrawingImage}" />
                                <Image Width="12" Visibility="{Binding Path=IsTask,Converter={StaticResource Bool2VisConv}}">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsASAP}" Value="True">
                                                    <Setter Property="Source" Value="{StaticResource ASAPIconDrawingImage}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=IsDelegated}" Value="True">
                                                    <Setter Property="Source" Value="{StaticResource DelegatedIconDrawingImage}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=IsInactive}" Value="True">
                                                    <Setter Property="Source" Value="{StaticResource InactiveIconDrawingImage}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=IsScheduled}" Value="True">
                                                    <Setter Property="Source" Value="{StaticResource ScheduledIconDrawingImage}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <Ellipse Width="13" Height="13" Margin="2" Fill="{Binding Path=Topic.TopicColor,Converter={StaticResource ColorToSolidColorBrush_ValueConverter}}" />
                                <!--<Rectangle Width="14" Height="14" Margin="2" Fill="{Binding Path=Topic.TopicColor,Converter={StaticResource ColorToSolidColorBrush_ValueConverter}}" />-->
                                <TextBlock Margin="3" Text="{Binding Path=Title}" FontStyle="{Binding Path=IsCurrent,Converter={StaticResource currentToItalicConv}}" TextDecorations="{Binding Path=Done,Converter={StaticResource doneToTextDecorationsConverter}}" >
                                    <TextBlock.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Remove project" Command="{Binding Path=RemoveMeCommand}"  Visibility="{Binding Path=IsProject,Converter={StaticResource Bool2VisConv}}" />
                                            <MenuItem Header="Remove task" Command="{Binding Path=RemoveMeCommand}"  Visibility="{Binding Path=IsTask,Converter={StaticResource Bool2VisConv}}" />
                                            <MenuItem Header="Add project" Command="{Binding Path=AddNewProjectCommand}"  Visibility="{Binding Path=IsProject,Converter={StaticResource Bool2VisConv}}" />
                                            <MenuItem Header="Add task" Command="{Binding Path=AddNewTaskCommand}" />
                                        </ContextMenu>
                                    </TextBlock.ContextMenu>
                                </TextBlock>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
                <!--<ListView Grid.Row="1" Margin="2" ItemsSource="{Binding Path=Projects}" SelectedItem="{Binding Path=SelectedProject,UpdateSourceTrigger=PropertyChanged}" />-->
                <CheckBox Grid.Row="2" Margin="5" Content="Show done" IsChecked="{Binding Path=ShowDone,UpdateSourceTrigger=PropertyChanged}" />
                <!--<GridSplitter Grid.Row="3" Height="5" HorizontalAlignment="Stretch" />
            <Label Grid.Row="4" Content="Tasks" />
            <ListView Grid.Row="5" Margin="2" ItemsSource="{Binding Path=SelectedProject.Tasks}" />
            <CheckBox Grid.Row="6" Margin="5" Content="Show done" />-->
            </Grid>
            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
            <Grid Grid.Column="2" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Label Content="Selected task" FontWeight="Bold" />
                <ContentControl Grid.Row="1" Content="{Binding Path=SelectedItem}" >
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type vm:MiniTaskViewModel}">
                            <vw:MiniTaskView />
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
